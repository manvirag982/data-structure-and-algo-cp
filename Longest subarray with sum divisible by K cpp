/*Given an array containing N integers and a positive integer K. The task 
is to find the length of the longest sub array with sum of the elements divisible by the given value K*/


// use of concept of modular arthemetic
// lets take a example like i have  array 2 3 1 2  and check longest subarray sum divisible by 3 ans is 3 1 2 
// now see modula of prefix   2 2 0 2 repetation of two longest 3-0;

#include <bits/stdc++.h>
using namespace std;

int main() {
	
	int t;
	cin>>t;
	
	while(t--)
	{
	    int n,k;
	    cin>>n>>k;
	    
	    int a[n];
	    
	    
	    for(int i=0;i<n;i++)
	    cin>>a[i];
	    
	    
	    unordered_map<int,int> mp;   // for storing modulus prefix
	    
	    int sum=0;
	    int res=0;
	    
	    
	    for(int i=0;i<n;i++)
	    {
	        sum+=a[i];
	        int x=((sum%k)+k)%k;    // for negative no. 1-(-2)=3
	        if(x==0)
	        {
	            res=max(res,i+1);
	            continue;
	        }
	        else
	        {
	            if(mp.find(x)!=mp.end())
	            {
	                res=max(res,i-mp[x]);
	            }
	            else
	            mp[x]=i;
	        }
	    }
	    cout<<res<<endl;
	}
	return 0;
}
